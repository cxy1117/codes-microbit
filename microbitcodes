boolean = button_a.is_pressed()
   if boolean:
       display.show(Image.MEH)
else:
    display.show(Image:FABULOUS)

 presses = button_a.gets_presses()
    display.show(str(presses))




while True:
   boolean = button_a.is_pressed()
   boolean2 = button_b.is_pressed()
   if boolean and boolean2:
       display.show(Image.MEH)
else:
    display.show(Image:FABULOUS)
    
    from microbit import *
import random

>>>>>>>>>>>>>>>>>>FLAPPYBIRD.CODE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

display.scroll("Get ready...")
DELAY = 20 #duration of one frame
FRAMES_PER_WALL_SHIFT = 20 # number of frames before the pipes shift
   #to the left by 0ne pixel
FRAMES_PER_NEW_WALL = 100 #100 = 20*5
FRAMES_PER_SCORE = 50
   # global variable
y = 50 #coordinate of the bird, between 0-99
speed = 0 #change of y coordinate for one frame
score = 0
frame = 0
   
   
def make_pipe():
     pipe = Image("00003:00003:00003:00003:00003")
     gap = random.randint(0,3)
     pipe.set_pixel(4, gap, 0)
     pipe.set_pixel(4, gap+1, 0)
     return pipe
     
pipe = make_pipe()


while True:
    display.show(pipe)
    if button_a.is_pressed():
        speed = -8
    
    
    speed += 1
    if speed > 2:
      speed =2
      
    y+= speed
    if y >99:
       y=99
    elif y<0:
       y=0
     
    bird_y = int(y/20)
    display.set_pixel( 1, bird_y, 9)
     
    if pipe.get_pixel(1, bird_y,) !=0:
        display.show(Image.SAD)
        sleep(500)
        display.scroll("Score...")
    if frame % FRAMES_PER_WALL_SHIFT == 0:
        pipe = pipe.shift_left(1)
    
    if frame % FRAMES_PER_NEW_WALL == 0:
        pipe= make_pipe()
    if frame % FRAMES_PER_SCORE == 0:
        score += 1 
    
    sleep(DELAY)
    frame += 1
    >>>>>>>>>>>>>>>>>>>>>>>>>>>ENDFLAPPYBIRDCODE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    from microbit import*




while True:
    reading = accelerometer.get.x()
    if reading>20:
        display.show("L")
    elif reading<-20:
        display.show("R")
    else:
        display.show("-")
    



from microbit import*

compass.calibrate()
while True:
    sleep(100)
    needle = ((15-compass.heading())//30)%12
    ##compass.heading() return an integer betwwen 0 - 360 to show the degree
    display.show(Image.ALL_CLOCKS[needle])
    
    
    
    
    from microbit import*
while True
    
    reading = pin0.read_analog() /204
   if reading> 4.0:
       pos = 4
   elif reading > 3.0:
       pos = 3
   elif reading > 2.0:
       pos = 2
   elif reading > 1.0:
       pos = 1
   else:
       pos = 0
#this is equals to pos = reading //1
       
   column = ['0'for i in range (5)]
   column[pos] = '9'
   img = ((''.join(column)+":")*5)[0:-1]
   #-1 refers to the last item in the array
   #-1 iterates all the elements in the array except the last element
   img = Image(img)
   # convert variable type
   display.show(img)
   sleep(200)
    




rom microbit import *
frame = 0
while True:
    if frame % 2 ==0:
        display,show(str(frame))
        pin0.write_digital(0)
    else:
        pin0.write_digital(1)
        display.clear()
    frame+=1
    sleep(2000)


>>>>>>>>>>>>>>>>>>>DICE>>>>>>>>>>>>>>>>>>>
from microbit import *
import random

dice1 = Image("00000:"
              "00000:"
              "00900:"
              "00000:"
              "00000:")
dice2 = Image("90000:"
              "00000:"
              "00000:"
              "00000"
              "00009:")
dice3 = Image("90000:"
              "00000:"
              "00900:"
              "00000:"
              "00009:")
dice4 = Image("90009:"
              "00000:"
              "00000:"
              "00000:"
              "90009:")
dice5 = Image("90009:"
              "00000:"
              "00900:"
              "00000:"
              "90009:")
dice6 = Image("90009:"
              "00000:"
              "90009:"
              "00000:"
              "90009:")
dice = [dice1,dice2,dice3,dice4,dice5,dice6]
              
while True:
  
   if button_a.is_pressed():
    display.show(random.choice(dice))
    sleep(500)
    >>>>>>>>>>>>>>>>>>>>>>>>ENDDICE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>ACCELEROMETER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
from microbit import *


while True:
        readingX = accelerometer.get_x()
        
        if readingX >= 200 :
            display.scroll("Right")
        elif readingX >= -200 :
            display.scroll("Left")
        else :
            display.show("-")
            
     >>>>>>>>>>>>>>>>>>>>>END>>>>>>>>>>>>>>>>>>>
     >>>>>>>>>>>>>>>>ACCEL>>>>>>>>>>>>>>>>>>.>.
     from microbit import *


while True:
        readingX = accelerometer.get_x()
        readingY = accelerometer.get_y()
        
        if readingX >= 200:
            display.show("R")
        elif readingX <= -200:
            display.show("L")
        elif readingY <= -200:
            display.show("U")
        elif readingY >= 200:
            display.show("D")
        else:
            display.show(Image.SURPRISED)
           
>>>>>>>>>>>>>>>>>>>>>>>>>>>END>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


from microbit import *


while True:
    gesture = accelerometer.current_gesture()
    if gesture == "shake":
        display.show(Image.HAPPY)
    else:
        display.show(Image.SAD)
        
sleep(1000)
>>>>>>>>>>>>>>>>>>>>END>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
